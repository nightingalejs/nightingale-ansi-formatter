{"version":3,"sources":["../../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import ansi from 'ansi-styles';\nimport { levelToSymbol, levelToStyles, styleToHexColor } from 'nightingale-formatter';\n\nconst ansiStyles = {\n    black: ansi.black,\n    red: ansi.red,\n    green: ansi.green,\n    yellow: ansi.yellow,\n    blue: ansi.blue,\n    magenta: ansi.magenta,\n    cyan: ansi.cyan,\n    white: ansi.white,\n    gray: ansi.gray,\n\n    bgBlack: ansi.bgBlack,\n    bgRed: ansi.bgRed,\n    bgGreen: ansi.bgGreen,\n    bgYellow: ansi.bgYellow,\n    bgBlue: ansi.bgBlue,\n    bgMagenta: ansi.bgMagenta,\n    bgCyan: ansi.bgCyan,\n    bgWhite: ansi.bgWhite,\n\n    bold: ansi.bold,\n    underline: ansi.underline,\n\n    // http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html\n    orange: { open: ansi.color.ansi256.hex(styleToHexColor['orange']), close: ansi.color.close },\n    'gray-light': { open: ansi.color.ansi256.hex(styleToHexColor['gray-light']), close: ansi.color.close },\n};\n\nexport function style(styles, string) {\n    if (!styles || !styles.length || !string) {\n        return string;\n    }\n\n    return styles.reduce((string, styleName) => {\n        let style = ansiStyles[styleName];\n\n        if (!style) {\n            throw new Error(`Unknown style: ${styleName}`);\n        }\n\n        return style.open + string + style.close;\n    }, string);\n}\n\n// TODO create package\nfunction displayObject(object, metadataStyles) {\n    const keys = Object.keys(object);\n\n    if (keys.length === 0) {\n        return;\n    }\n\n    return `{ ${keys.map(key => {\n        const value = object[key];\n        let styles = metadataStyles && metadataStyles[key];\n        if (!styles) {\n            switch (typeof value) {\n                case 'number':\n                    styles = ['yellow'];\n                    break;\n                case 'string':\n                    styles = ['orange'];\n                    break;\n\n            }\n        }\n        return `${key}: ${style(styles, value.constructor === Object ? displayObject(value) : JSON.stringify(value))}`;\n    }).join(', ')} }`;\n}\n\n/**\n * @param {Object} record\n * @returns {string}\n */\nexport default function format(record) {\n    let string = '';\n    if (record.key) {\n        string += style(['gray-light'], record.key);\n    }\n\n    if (record.datetime) {\n        if (string.length !== 0) {\n            string += ' ';\n        }\n\n        string += style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]);\n        /* new Date().toFormat('HH24:MI:SS') */\n    }\n\n    let message = record.symbol || levelToSymbol[record.level];\n    let styles = record.styles || levelToStyles[record.level];\n\n    if (record.message) {\n        if (message && message.length !== 0) {\n            message += ` ${record.message}`;\n        } else {\n            message = record.message;\n        }\n    }\n\n    if (styles) {\n        message = style(styles, message);\n    }\n\n    if (string.length !== 0) {\n        string += ' ';\n    }\n\n    string += message;\n\n    if (record.metadata) {\n        const stringObject = displayObject(record.metadata, record.metadataStyles);\n\n        if (stringObject) {\n            if (string.length !== 0) {\n                string += ' ';\n            }\n\n            string += stringObject;\n        }\n    }\n\n    if (record.extra) {\n        const stringObject = displayObject(record.extra);\n\n        if (stringObject) {\n            if (string.length !== 0) {\n                string += ' ';\n            }\n\n            string += stringObject;\n        }\n    }\n\n    return string;\n}\n\n// export style function\nformat.style = style;\n"]}